name: Publish HyperBounty to GitHub Packages

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        cat <<EOF > ~/.m2/settings.xml
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                              http://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>github</id>
              <username>\${env.GITHUB_ACTOR}</username>
              <password>\${env.GITHUB_TOKEN}</password>
            </server>
          </servers>
        </settings>
        EOF

    - name: Build and publish
      run: mvn -B deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ github.actor }}

    - name: Verify publication
      run: |
        echo "Package published to GitHub Packages"
        echo "Version: ${{ github.event.release.tag_name }}"

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build production JAR
      run: mvn -B clean package -DskipTests --file pom.xml

    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp target/HyperBounty-*.jar deployment/
        cp -r src/main/resources/* deployment/ 2>/dev/null || true
        cp README.md deployment/ 2>/dev/null || true
        zip -r HyperBounty-${{ github.event.release.tag_name }}-full.zip deployment/

    - name: Upload deployment package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: HyperBounty-${{ github.event.release.tag_name }}-full.zip
        asset_name: HyperBounty-${{ github.event.release.tag_name }}-full.zip
        asset_content_type: application/zip
